openapi: 3.0.3
info:
  title: Micro-Batching
  description: Micro-Batching Jobs
  version: 1.0.0
paths:
  /job:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobRequest"
      responses:
        "201":
          description: "A job has been successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
  /job/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: "The job with the specified ID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
  /batch-size:
    get:
      operationId: getBatchSize
      summary: get the current batch size
      responses:
        "200":
          description: "The current batch size"
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    type: integer
    post:
      operationId: updateBatchSize
      summary: update the batch size
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchSize'
      responses:
        "200":
          description: "The batch size has been successfully updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSize'
  /batch-frequency:
    get:
      responses:
        "200":
          description: "The current batch frequency"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFrequency'
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchFrequency'
      responses:
        "200":
          description: "The batch frequency has been successfully updated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchFrequency'
components:
  schemas:
    JobRequest:
      type: object
      required:
        - type
        - params
      properties:
        name:
          type: string
          description: "The name of the job, optional"
        type:
          $ref: '#/components/schemas/JobType'
        params:
          oneOf:
            - $ref: '#/components/schemas/UpdateUserInfoParams'
            - $ref: '#/components/schemas/BalanceUpdateParams'
    JobResult:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          format: uuid
          description: "The unique identifier for the job"
        status:
          $ref: '#/components/schemas/JobStatus'
    Job:
      type: object
      required:
        - id
        - status
        - type
        - params
      properties:
        id:
          type: string
          format: uuid
          description: "The unique identifier for the job"
        name:
          type: string
          description: "The name of the job, optional"
        status:
          $ref: '#/components/schemas/JobStatus'
        type:
          $ref: '#/components/schemas/JobType'
        params:
          oneOf:
            - $ref: '#/components/schemas/UpdateUserInfoParams'
            - $ref: '#/components/schemas/BalanceUpdateParams'
    JobType:
      type: string
      enum:
          - "UPDATE_USER_INFO"
          - "BALANCE_UPDATE"
    JobStatus:
      type: string
      description: "The status of the job"
      enum:
        - "QUEUED"
        - "SUBMITTED"
        - "ERROR_SUBMIT_FAILED"
    UpdateUserInfoParams:
      type: object
      additionalProperties: false
      required:
        - userId
      properties:
        userId:
          type: string
          description: "The user ID to update"
        name:
          type: string
          description: "The user name to update"
        email:
          type: string
          description: "The new email address for the user"
    BalanceUpdateParams:
        type: object
        additionalProperties: false
        required:
          - userId
        properties:
          userId:
            type: string
            description: "The user ID to update"
          amount:
            type: number
            description: "The amount to add to the user's balance"
    BatchSize:
      type: integer
      description: "Number of jobs which pass to BatchProcessor"
    BatchFrequency:
      type: integer
      description: "Times of batch processing per second"
